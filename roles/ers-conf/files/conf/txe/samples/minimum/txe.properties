#
# $Id: txe.properties 52735 2011-08-30 13:57:46Z jiraporn $

# This is the id of the TXE node which is used as part of the transaction reference 
# for transactions handled by this node. If running multiple nodes in parallel 
# this id MUST be different for each node!  
#
node_id=01


## Platform Web Services
#
# Location of the reseller transaction interface
# 
resellertransactionconnection.url=http://localhost:8911/reseller

# Location of the reseller management interface
# 
resellermanagementconnection.url=http://localhost:8911/resellerManagement

# Location of the subscriber database transaction interface
# 
subscribertransactionconnection.url=http://localhost:8087/subscribers/transaction

# Location of core single sign-on interface
#
singlesignonconnection.url=http://localhost:8911/singleSignon

# Location of the report transaction interfaces
# All transactions starting with SUP are handled by the support service
reporttransactionconnection.1.url=http://localhost:8071/supportsystem/reports
reporttransactionconnection.1.report_id_regexp=SUP.*
reporttransactionconnection.layout_language=en

# reseller_last_transactions is used by: getLastTransactionStatus, getMolletLastTransactionStatus
reporttransactionconnection.report_mapping.reseller_last_transactions=SUP_LAST_TRANSACTIONS
# subscriber_last_transactions is used by: getLastTransactionStatus, getMolletLastTransactionStatus
reporttransactionconnection.report_mapping.subscriber_last_transactions=SUP_SUB_LAST_TRANSACTIONS
# reseller_transaction_status is used by: getTransactionStatus, getMolletTransactionStatus
reporttransactionconnection.report_mapping.reseller_transaction_status=SUP_TRANSACTION_STATUS

# Location of all principal systems and which principal id types they handle
#
principal_systems.SUBSCRIBERS.id_types=SUBSCRIBERID SUBSCRIBERMSISDN SUBSCRIBERANONYMOUSID
principal_systems.SUBSCRIBERS.url=http://localhost:8087/principal
principal_systems.RESELLERS.id_types=RESELLERID RESELLERUSER RESELLERMSISDN RESELLERIDANDMSISDN ADMINUSER TERMINALID
principal_systems.RESELLERS.url=http://localhost:8912/principalService

# Custom operation service providers
service_providers.1.provider_id=SUBSCRIBERSYSTEM
service_providers.1.operation_id=SUBSCRIBER_.*
service_providers.1.url=http://localhost:8087/customOperations
service_providers.2.provider_id=RESELLERSYSTEM
service_providers.2.operation_id=RESELLER_.*
service_providers.2.url=http://localhost:8911/customOperations

purchase_providers.1.provider_id=ERS_VOUCHERS
purchase_providers.1.product_id_type=PRODUCT_SKU|GLOBAL_SKU
purchase_providers.1.url=http://localhost:8912/voucherPurchase


## Account connections
#
# All account transactions are logged and are not sent to any other system
#
accountconnection.classname=TransactionVoidConnection

# To define external account systems or custom operation Ids for specific VAS 
# services use vasservices properties. operation_id is required.
# One can define server_url + classname or link_operation_id or both.
# If link_operation_id is the same as operation_id, then it can be omitted.
#
vasservices.1.operation_id=CMB
vasservices.1.classname=TransactionVoidConnection

# Resellers Operation
# Resellers can activate themselves by sending activation
# code over different clients. Setting activation_code true will enable activation code 
# checking. 
resellers.activation_code=true

# Sub-resellers approving re-linking can either directly select there pin if true
# otherwise they needs to supply their old pin.
resellers.link_subreseller_approval_cpin=true

# The supported reversal operations
reversal.supported_tx_profiles=CREDIT_TRANSFER, TOPUP, MOLLET_VOUCHER_CREATE, MOLLET_TRANSFER

# SMS provider connection, by default assumes kannel is running on the same host with standard configuration
smsprovider.classname=HttpSMSProvider
smsprovider.url=http://127.0.0.1:13013/cgi-bin/sendsms?username=ers&password=recharge
# SMS prefix to be added to the destination number.
smsprovider.to_prefix=+

# MSISDN settings
#Default country code padded to msisdn in case entered msisdn less than digits of default_country_code_digit + default_network_code_digits + subscriber_number_digits
locale.default_country_code=46
#Default network code padded to msisdn in case entered msisdn less than digits of default_network_code_digits + subscriber_number_digits
locale.default_network_code=70
#Length of msisdn excluding network code and country code
locale.subscriber_number_digits=7

# The length of msisdn can now also be set as min and max values to allow
# for varying length msisdn:s.
#
#locale.min_subscriber_number_digits=7
#locale.max_subscriber_number_digits=7

#Optional property to set range of allowed network_codes.
#locale.accepted_network_codes=70,76
#Optional property to set range of allowed country_codes.
#locale.accepted_country_codes=46,47

# Currency settings
#Decimal separator
locale.decimal_separator=,
#Thousand separator
locale.thousand_separator=.

# Custom currency settings. 
#
# The format for the custom currency setting is:
# locale.custom_currency.XTS=3
#
# In this case XTS is the three letter ISO 4217 code (XTS is a code reserved for testing)
# and 3 is the amount of decimals. You can either make up your own currency code or override
# an existing currency code.  
# 
locale.custom_currency.XTS=3


# CMS settings, used to resolve the request result message texts
cms.classname=SimpleFileCMS
# Optional default language in case the language is missing in the request to the CMS system. 
# cms.default_language=en
cms.languages=en
cms.en.filename=messages_english.properties
cms.en.encoding=UTF-8

# Flow control settings
flowcontrol.default.asynchronous=false
flowcontrol.default.cooldown_time=100
flowcontrol.default.max_parallel_requests=40

# Service manager settings
# The default graceful shutdown time for stopping the server in milliseconds.
# In case a shutdown takes longer time, a warning message will be printed in the log. 
servicemanager.shutdown_hooks=SIGHUP:timeout=60000


# Transaction log provider settings
transactionlog.class_name=com.seamless.ers.txe.transactionlog.xmlbeans.XMLBeansTransactionLoggingFactory

transactionlog.log.db_driver=com.mysql.jdbc.Driver
transactionlog.log.db_url=jdbc:mysql://localhost:3306/transactionlog
transactionlog.log.db_user=refill
transactionlog.log.db_password=refill
transactionlog.log.data_format=zip
transactionlog.log.pool_min_size=40
transactionlog.log.pool_max_size=100
transactionlog.log.pool_simultaneous_build_throttle=40
transactionlog.log.fallback_logdir=/var/seamless/log/txe/fallback

# Classic reference generator with 25 digits using:
# - Node id
# - Time stamp
# - Sequence number (that will wrap when restarted etc)
#
transactionlog.log.reference_generator.class_name=com.seamless.common.referencegeneration.TimestampReferenceGenerator

# Number of digits in the sequence number part
#
transactionlog.log.reference_generator.reference_counter_length=6

# The format of the timestamp part of the reference
#
transactionlog.log.reference_generator.timestamp_format=yyyyMMddHHmmssSSS

# If a timestamp is repeated (eg beccause of clock sync etc) 
#  this is the number of times it is allowed to repeat without logging a warning
#
transactionlog.log.reference_generator.timestamp_repeat_warning_count=10

# New reference generator, using the node id and a node-unique database sequence number
# 

# transactionlog.log.reference_generator.class_name=com.seamless.common.referencegeneration.DatabaseSequenceReferenceGenerator
# Database connection for the sequence generator table
#
transactionlog.log.reference_generator.db_driver=com.mysql.jdbc.Driver
transactionlog.log.reference_generator.db_url=jdbc:mysql://localhost:3306/transactionlog
transactionlog.log.reference_generator.db_user=refill
transactionlog.log.reference_generator.db_password=refill
transactionlog.log.reference_generator.db_autoCommit=true
transactionlog.log.reference_generator.pool_min_size=1
transactionlog.log.reference_generator.pool_max_size=100
transactionlog.log.reference_generator.pool_timeout=100

# The name of the reference number generated
# (used in error logs to determine which reference generator had a problem)
#
transactionlog.log.reference_generator.reference_name=ERS transaction reference

# The database table in which the sequence is stored (as a single row)
#
transactionlog.log.reference_generator.table_name=txe_transaction_reference_sequence

# The column name for the sequence counter
#
transactionlog.log.reference_generator.sequence_column_name=seqNo

# The number of digits in the sequence number part of the generated reference
#
transactionlog.log.reference_generator.num_sequence_digits=10

# The alphabet used to generate the reference sequence number
# Typically digits, but letters may be used to create a shorter transaction reference 
# 
transactionlog.log.reference_generator.sequence_number_alphabet=0123456789

transactionlog.archive.db_driver=com.mysql.jdbc.Driver
transactionlog.archive.db_url=jdbc:mysql://localhost:3306/transactionlog
transactionlog.archive.db_user=refill
transactionlog.archive.db_password=refill
transactionlog.archive.pool_min_size=1
transactionlog.archive.pool_max_size=100
transactionlog.archive.pool_simultaneous_build_throttle=40

transactionlog.replication.active=true
transactionlog.replication.interval=1s
transactionlog.replication.batch_size=100
transactionlog.replication.delete_replicated=true

# Connection to the database for keeping track of business counters
businesscounters.db_driver=com.mysql.jdbc.Driver
businesscounters.db_url=jdbc:mysql://localhost:3306/businesscounters
businesscounters.db_user=refill
businesscounters.db_password=refill
businesscounters.pool_max_size=100
businesscounters.pool_simultaneous_build_throttle=40

# --- License system settings ---
# How often the license manager updates its counters to license service
licensemanager.update_frequency=60000

# Path to license file
licenseservice.license_file=license.pgp
# How often license service checks db integrity
licenseservice.update_frequency=600000
# license service db settings
licenseservice.database.db_driver=com.mysql.jdbc.Driver
licenseservice.database.db_url=jdbc:mysql://localhost:3306/licensecounters
licenseservice.database.db_user=refill
licenseservice.database.db_password=refill

# Example of license SMS notification settings
#
#licenseservice.notification.default_language=en
#licenseservice.notification.sender=1234
#
# buffer_period denotes the time in minute it should consider to avoid 
# sending multiple sms from different nodes
#licenseservice.notifications.buffer_period=60
#
#licenseservice.notifications.state_notification_recipients=
#
#licenseservice.notifications.threshold_warnings.1.percentage=80
#licenseservice.notifications.threshold_warnings.1.notification_id=LICENSE_AT_80P
#licenseservice.notifications.threshold_warnings.1.notification_recipients=
#
#licenseservice.notifications.threshold_warnings.2.percentage=95
#licenseservice.notifications.threshold_warnings.2.notification_id=LICENSE_AT_95P
#licenseservice.notifications.threshold_warnings.2.notification_recipients=


## Pricing configuration
#
# Set list of pricing engines
# Syntax: pricing.engines.$engine_name$.$property_name$=$property_value$
# There are 4 types of pricing engine.
# 1. BeanshellPriceEngine
#	pricing.engines.A.classname=BeanShellPriceEngine
#	pricing.engines.A.script=pricing/mollet_transfer.bsh
# 2. SimpleTopupPriceEngine
#	pricing.engines.B.classname=SimpleTopupPriceEngine
# 3. FreePriceEngine
#	pricing.engines.C.classname=FreePriceEngine
# 4. ExternalPriceEngine
# 	pricing.engines.D.classname=ExternalPriceEngine
# 	pricing.engines.D.url=http://localhost:8080/core/priceengine
# 	pricing.engines.D.product_SKU=CREDIT_TRANSFER

pricing.engines.BASIC_PRICING.classname=BeanShellPriceEngine
pricing.engines.BASIC_PRICING.script=pricing/basic.bsh

###################################
# Refund pricing engine
###################################
# (This is a precodition to using refunds)
#
# pricing.engines.SIMPLE_REFUND.classname=SimpleRefundPriceEngine



# Pricing mapping configuration.
# Mapping transaction profile with pricing engine.
# Every transaction need pricing engine.
# Syntax:
# 	pricing.mappings.$ordering_number$.$property_name$=$property_value$
# Examples:
# Set classifier 
#	pricing.mappings.1.classifier_match=.*/MOLLET_TRANSFER
# Set engine
#	pricing.mappings.1.engine=MOLLET_TRANSFER

pricing.mappings.1.classifier_match=.*
pricing.mappings.1.engine=BASIC_PRICING

###################################
# Refund pricing mappings
###################################
# (This is a precodition to using refunds)
#
# pricing.mappings.3.classifier_match=ERSRefundTransaction.*
# pricing.mappings.3.engine=SIMPLE_REFUND



