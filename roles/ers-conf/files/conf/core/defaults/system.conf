#!/bin/bash
#
# This is system.conf which contains default settings of the ERS Core. You
# should not edit this file. Instead, edit /opt/seamless/conf/core/system.conf 
# and overwrite the settings there.
#
# $Id$

# Database settings
db_master_host="localhost"
db_master_user="refill"
db_master_pass="refill"
db_master_refill_name="Refill"
db_master_refill_port="3306"
db_master_refillsessions_name="RefillSessions"
db_master_billing_name="Billing"
db_debug_sql="false"
db_keepalive="30"
db_unlock_keystore=""
db_unlock_key=""
db_stat_interval_seconds="0"
db_query_timeout="120"
db_auto_reconnect="true"

# Pool Implementation
db_pool_implementation="dbcp"

# DBCP properties
db_pool_abandoned_timeout_sec="300"
db_pool_close_abandoned="false"
db_pool_dbcp_test_while_idle="true"
db_pool_dbcp_num_tests_per_eviction_run="10"
db_pool_dbcp_time_between_eviction_runs_millis="-1"
db_pool_dbcp_min_evictable_idle_time_millis="60000"

# Proxool prperties
db_pool_proxool_house_keeping_sleep_time="30000"
db_pool_proxool_maximum_active_time="3600000"
db_pool_proxool_prototype_count="2"
db_pool_proxool_simultaneous_build_throttle="40"

# Pool Common properties
db_zeroDateTimeBehavior="convertToNull"
db_pool_timeout_millis="300000"

# Java settings
java_jaco_initial_heap="32M"
java_jaco_max_heap="128M"
java_nameserver_initial_heap="32M"
java_nameserver_max_heap="128M"
java_servicemanager_initial_heap="32M"
java_servicemanager_max_heap="512M"
java_services_initial_heap="32M"
java_services_max_heap="128M"
java_tomcat_initial_heap="32M"
java_tomcat_max_heap="512M"
java_erg_initial_heap="32M"
java_erg_max_heap="512M"

# WS settings
ws_reseller_tx_service_url="http://0.0.0.0:8911/reseller"
ws_reseller_mgmt_service_url="http://0.0.0.0:8911/resellerManagement"
ws_reseller_event_callback_service_url="http://0.0.0.0:8911/resellerEventCallback"
ws_system_management_url="http://0.0.0.0:8911/systemManagement"
ws_price_engine_url="http://0.0.0.0:8910/legacyPricing"
ws_singlesignon_service_url="http://0.0.0.0:8911/singleSignon"
ws_custom_operations_url="http://0.0.0.0:8911/customOperations"

# General Refill options
keystore_filename="/opt/seamless/conf/core/digitalwarehouse.key"

# Core applications
nameserver_enable="yes"
tomcat_enable="yes"
servicemanager_enable="yes"

# Web applications to be started
webadmin_enable="yes"
checkapp_enable="no"
inboxapp_enable="no"
partnerapp_enable="no"
webposapp_enable="no"
webshopapp_enable="no"
transactionapp_enable="no"

# Refill services
imprint_service_enable="no"
imprintssl_service_enable="no"
modem_service_enable="no"
modemssl_service_enable="no"
sms_service_enable="no"
stk_service_enable="no"
ussd_service_enable="no"
clientws_service_enable="no"

# Default database pool sizes
db_pool_min_size_authorization="2"
db_pool_min_size_catalogue="2"
db_pool_min_size_categorization="2"
db_pool_min_size_digitalwarehouse="2"
db_pool_min_size_externaldevices="2"
db_pool_min_size_idservice="2"
db_pool_min_size_imports="2"
db_pool_min_size_locale="2"
db_pool_min_size_logging="2"
db_pool_min_size_messaging="2"
db_pool_min_size_payment="2"
db_pool_min_size_reports="2"
db_pool_min_size_resellers="2"
db_pool_min_size_resources="2"
db_pool_min_size_sessions="2"
db_pool_min_size_suppliers="2"
db_pool_min_size_system="2"

db_pool_max_size_authorization="100"
db_pool_max_size_catalogue="100"
db_pool_max_size_categorization="100"
db_pool_max_size_digitalwarehouse="100"
db_pool_max_size_externaldevices="100"
db_pool_max_size_idservice="100"
db_pool_max_size_imports="100"
db_pool_max_size_locale="100"
db_pool_max_size_logging="100"
db_pool_max_size_messaging="100"
db_pool_max_size_payment="100"
db_pool_max_size_reports="100"
db_pool_max_size_resellers="100"
db_pool_max_size_resources="100"
db_pool_max_size_sessions="100"
db_pool_max_size_suppliers="100"
db_pool_max_size_system="100"

# Billing services to be added to services_refill.conf
billing_billing_enable="yes"
billing_billing_db_url='//${db_master_host}/${db_master_billing_name}'
billing_billing_db_pool_size="10"
billing_billing_config_file="/opt/seamless/conf/core/billing.conf"
billing_billing_export_as_link="no"
billing_billing_balance_cache_size="2000"

# Operators to be added to services_refill.conf
operator_fakeop_enable="no"
operator_fakeop_classname="b2.services.billing.BillingServiceImpl"
operator_fakeop_var_payment_export_name="FakeOp"
operator_fakeop_var_db_url='//${db_master_host}/FakeOperator'
operator_fakeop_var_config_file="/opt/seamless/conf/core/fakeop.conf"
operator_fakeop_var_operator_link_name="FakeOpLink"
operator_fakeop_var_admin_export_name="OperatorBilling"

operator_e3l_enable="no"
operator_e3l_classname="b2.services.operatorlink.EricssonCS3.EricssonCS3ServiceImpl"
operator_e3l_var_corba_export_name="EricssonCS3Link"
operator_e3l_var_msisdn_prefix=""
operator_e3l_var_msisdn_length="0"
operator_e3l_var_payment_profile="1"
operator_e3l_var_origin_node_type="ERS1"
operator_e3l_var_ucip_file="/opt/seamless/conf/core/ucip.conf"

# Logging service options
logging_log_file="/var/seamless/log/core/sys.log"
logging_errlog_file="/var/seamless/log/core/syserr.log"
logging_log_sql_file="/var/seamless/log/core/sql.log"
log4j_config_file="/opt/seamless/conf/core/log4j/core-log4j.properties"
jetm_enable="yes"
jetm_config_file="/opt/seamless/conf/core/jetm/core-jetm-config.xml"

# Payment service options
payment_config_file="/opt/seamless/conf/core/payment.conf"
payment_system_prefix="1"
payment_payorder_loop_delay="300"
payment_payorder_timeout="7200"
payment_payorder_recheck="600"

# DigitalWarehouse service options
digitalwarehouse_etopup_must_have_contract="true"
digitalwarehouse_processor_loop_period="600"
digitalwarehouse_payment_duration="7200"
digitalwarehouse_reservation_duration="7200"
digitalwarehouse_old_order_threshold="600"
digitalwarehouse_debug=1
digitalwarehouse_ignore_invalid_reported_keys="false"

# Options for stk
stk_service_config="/opt/seamless/conf/core/stkapp.conf"

# Options for sms
sms_service_config="/opt/seamless/conf/core/smsapp.conf"

# Options for partnerapp
partnerapp_logo="/system/images/top_banner_partnerapp.jpg"
partnerapp_default_language="en"
partnerapp_topupreceipt_header=""
partnerapp_topupreceipt_footer=""
partnerapp_topupreceipt_percent_visible="true"
partnerapp_restrict_reseller_search="false"

# Options for tarnsactionsapp
transactionapp_config="/opt/seamless/conf/core/transactions.conf"

# Options for webpos
webpos_logo="/system/images/top_banner_webposapp.jpg"

# "webpos_product_list" parameter specifies the SKU codes of the products
# which need to be loaded for the reseller. The list is comma separated.
#
#webpos_product_list="52,62"

# Additional scripts to be executed
scripts_startup_pre=""
scripts_startup_post=""
scripts_shutdown_pre=""
scripts_shutdown_post=""
scripts_env_conf=""

# Init settings
init_send_trap="no"

# Failover settings
failover_fence_db="no" # Read documentation for ERS Automatic Failover before
                       # changing this setting to yes.

### End of config variables

# Source local system.conf.
if [ -r /opt/seamless/conf/core/system.conf ]; then
		. /opt/seamless/conf/core/system.conf
fi

# This should be synced with seamless common loading order
if [ ! -z "$SEAMLESS_MARKET" ]; then
	if [ -r /opt/seamless/conf/core/system_$SEAMLESS_MARKET.conf ]; then
		. /opt/seamless/conf/core/system_$SEAMLESS_MARKET.conf
	fi
fi

if [ ! -z "$SEAMLESS_NODENAME" ]; then
	echo "/opt/seamless/conf/$SEAMLESS_NODENAME.properties"
	if [ -r /opt/seamless/conf/$SEAMLESS_NODENAME.properties ]; then
		TMPFILE=$(mktemp /tmp/output.XXXXXXXXXX) || { echo "Failed to create temp file"; exit 1; }
		/opt/seamless/bin/convertProperties /opt/seamless/conf/$SEAMLESS_NODENAME.properties > $TMPFILE
        . $TMPFILE
        rm -rf $TMPFILE
    fi
else
	core_hostname=`hostname`
	if [ -r /opt/seamless/conf/$core_hostname.properties ]; then
		TMPFILE=$(mktemp /tmp/output.XXXXXXXXXX) || { echo "Failed to create temp file"; exit 1; }
        /opt/seamless/bin/convertProperties /opt/seamless/conf/$core_hostname.properties > $TMPFILE
        . $TMPFILE
        rm -rf $TMPFILE
    elif [ -r /opt/seamless/conf/localhost.localdomain.properties ]; then
		TMPFILE=$(mktemp /tmp/output.XXXXXXXXXX) || { echo "Failed to create temp file"; exit 1; }
        /opt/seamless/bin/convertProperties /opt/seamless/conf/localhost.localdomain.properties > $TMPFILE
        . $TMPFILE
        rm -rf $TMPFILE
	fi
fi

	#####################################
	# Functions used by startup scripts #
	#####################################

	die () {
		echo "(`basename $0`) $1"
		exit 1
	}

	check_enable() {
		val=${!1}
		case $val in
			[yY][eE][sS])
				return 0
				;;
			*)
				return 1
				;;
		esac
	}

	function set_start() {
		for a in $1; do
			if check_enable "${a}_enable"; then
				eval ${a}_start=""
			fi
		done
	}

	add_billing_services() {
		local billing_services=$(echo ${!billing*} | tr ' ' '\n' | awk -F_ '{print $1"_"$2}' | sort -u | tr '\n' ' ')
		for b in $billing_services; do
			if check_enable "${b}_enable"; then
				billing_services_list="${b} ${billing_services_list}"
				local classname="b2.services.billing.BillingServiceImpl"
				local db_url="${b}_db_url"
				local db_pool="${b}_db_pool_size"
				local balance_cache_size="${b}_balance_cache_size"
				local config_file="${b}_config_file"
				local name="${b/#billing_/}"
				local name_firstchar=${name:0:1}
				local name_remainingchars=${name:1}
				local capital_name="$(echo $name_firstchar | tr a-z A-Z)${name_remainingchars}"
				echo -n "add ${b} ${classname} "
				echo -n "payment_export_name=Billing${capital_name} "
				echo -n "admin_export_name=BillingAdmin${capital_name} "
				echo -n "db_url=$(eval echo ${!db_url}) "
				echo -n "config_file=${!config_file} "
				echo -n "pool_size=$(eval echo ${!db_pool}) "
				echo -n "balance_cache_size=$(eval echo ${!balance_cache_size}) "
				if check_enable "${b}_export_as_link"; then
					echo -n "operator_link_name=${capital_name}Link "
				fi
				echo
			fi
		done
		unset b
	}
	 

	add_operators() {
		local operator_links=$(echo ${!operator*} | tr ' ' '\n' | awk -F_ '{print $1"_"$2}' | sort -u | tr '\n' ' ')
		for o in $operator_links; do
			if check_enable "${o}_enable"; then
				local name="${o}_name"
				local classname="${o}_classname"
				local link="${o/#operator_/}_link"
				operator_links_list="${link} ${operator_links_list}"
			operator_links_dependencies="dependency ${link} logging suppliers\n${operator_links_dependencies}" 
			echo -n "add ${link} ${!classname} "
			local vars=$(eval "echo \${!${o}_var*}")
			for v in $vars; do
				[ -n "${!v}" ] && echo -n "$(eval "echo \${v/#${o}_var_/}")=`eval echo ${!v}` "
			done
			echo
		fi
	done
	unset v o
}

# Take a Java Xms/Xmx string and convert it to bytes.
mem_convert() {
	prefix=$(echo $1 | tr -d '[:digit:]')
	value=$(echo $1 | tr -d '[:alpha:]')
	case $prefix in
		[kK])
			factor=1024
			;;
		[mM])
			factor=$((1024*1024))
			;;
		[gG])
			factor=$((1024*1024*1024))
			;;
		*)
			factor=1
			;;
	esac
	echo $(($value * $factor))
}

check_vars() {
	[ ! -d $conf_path ] && die "ERROR: $conf_path doesn't exist"
	[ ! -d $log_path -o ! -w $log_path ] && die "ERROR: $log_path not writable"
	[ ! -d $runtime_path ] && die "ERROR: $runtime_path doesn't exist"
	[ ! -d $server_path ] && die "ERROR: $server_path doesn't exist"
	[ ! -d $system_path -o ! -w $system_path ] && die "ERROR: $system_path not writable"

	local _RUNLIST="$ers_java $manage_service $serviceconsole $services_refill $services_web $start_detached"
	for s in $_RUNLIST; do
		[ ! -x $s ] && die "ERROR: $s is not executable"
	done
}

#####################################
# Variables used by startup scripts #
#####################################

SERVICES="imprint imprintssl modem modemssl ussd clientws"

conf_path=/opt/seamless/conf/core
log_path=/var/seamless/log/core
runtime_path=/opt/seamless/bin
server_path=/opt/seamless/contrib
system_path=/var/seamless/system/core

# Commenting this variable
# This is already provided by env.conf file from ers-base package
#ers_java=$server_path/jre/bin/java
manage_service=$runtime_path/manage_service
serviceconsole=$runtime_path/serviceconsole
services_refill=$conf_path/defaults/services_refill.conf
services_web=$conf_path/defaults/services_web.conf
start_detached=$runtime_path/start_detached
