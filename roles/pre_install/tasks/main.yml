---
# tasks file for pre_install
- name: Disable Network Manager
  service: name=NetworkManager state=stopped enabled=no
  when: '"{{ ansible_distribution_major_version }}" == "7"'
- name: Network_Conf
  template:
   src: ifcfg-eth0.j2
   dest: /etc/sysconfig/network-scripts/ifcfg-eth0
   force: yes
  notify: Restart Network
- name: Changing the hostname in command
  command: "hostname {{ inventory_hostname }}"
- name: Changing the hostname in the file
  template:
   src: network.j2
   dest: /etc/sysconfig/network
  notify: Restart Network
- name: Enter DNS
  copy:
   src: resolv-conf
   dest: /etc/resolv.conf
- name: Disable Firewalld
  service: name=firewalld state=stopped enabled=no
  when: '"{{ ansible_distribution_major_version }}" == "7"'
- name: Disable Iptables
  service: name=iptables state=stopped enabled=no
  when: '"{{ ansible_distribution_major_version }}" == "6"'
- name: Hosts File
  copy:
   src: host_file
   dest: /etc/hosts
- name: Registering SElinux status in file
  shell: "grep -c 'SELINUX=enforcing' /etc/sysconfig/selinux | cat"
  register: selinux_status
  changed_when: false
- name: Disable selinux
  shell: "setenforce 0 && sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/sysconfig/selinux"
  when: selinux_status.stdout == "1"
- name: Install epel
  yum: name=epel-release state=installed
- name: Install chrony for time Syncronization
  yum: name=chrony state=installed
- name: Chrony conf for gateway1
  copy:
   src: chrony_conf_controller
   dest: /etc/chrony.conf
  when: inventory_hostname == "gateway1"
  notify: Restart Chrony
- name: Chrony conf for other than gateway1
  copy:
   src: chrony_conf
   dest: /etc/chrony.conf
  when: inventory_hostname != "gateway1"
  notify: Restart Chrony
- block:
  - name: Installing Python-devel
    yum: name=python-devel state=installed
  - name: Install Openstack Packages
    yum: name=centos-release-openstack-queens state=installed
  - name: Install Openstack client
    yum: name=python-openstackclient state=installed
  - name: Checking if pip is installed
    command: "pip --version"
    register: pip_is_installed
    ignore_errors: true   
    changed_when: false
  when: '"ers" not in inventory_hostname'
- block:
  - name: Getting pip
    get_url: url=https://bootstrap.pypa.io/get-pip.py dest=/tmp
  - name: Installing pip
    shell: "python /tmp/get-pip.py"
  - name: Deleting pip script
    file: name=/tmp/get-pip.py state=absent
  when:
  - '"ers" not in inventory_hostname'
  - pip_is_installed.rc != 0
- block:
  - name: Installing Memcached
    yum: name={{ item }} state=present
    with_items:
    - memcached
    - python-memcached
  - name: Configuring Memcached
    template:
     src: memcached.j2
     dest: /etc/sysconfig/memcached
    notify: Restart Memcached
  - name: Starting and Enabling memcached
    service: name=memcached state=started enabled=yes
  when: '"controller" in inventory_hostname'
...
